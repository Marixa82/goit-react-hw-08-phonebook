{"version":3,"file":"static/js/684.bbca8a5b.chunk.js","mappings":"0LAuDA,UA5CqB,WACjB,IAAMA,GAAWC,EAAAA,EAAAA,MAgBjB,OAEI,UAAC,KAAD,YACI,SAAC,KAAD,UAAO,kBACP,UAAC,KAAD,CAAWC,SAlBE,SAACC,GAClBA,EAAEC,iBACF,IAIMC,EAAW,CACbC,KALSH,EAAEI,cAAcC,SAASC,SAASC,MAM3CC,MALUR,EAAEI,cAAcC,SAASI,UAAUF,MAM7CG,SALaV,EAAEI,cAAcC,SAASK,SAASH,OAOnDV,EAASc,EAAAA,GAAAA,SAAwBT,GAEpC,EAK0CU,aAAa,MAAhD,WACI,4BACI,2BACI,SAAC,KAAD,CAAOC,KAAK,OAAOV,KAAK,WAAWW,YAAY,qBAAqBC,UAAQ,SAGpF,4BACI,2BACI,SAAC,KAAD,CAAOF,KAAK,QAAQV,KAAK,YAAYW,YAAY,sBAAsBC,UAAQ,SAGvF,4BACI,2BACI,SAAC,KAAD,CAAOF,KAAK,WAAWV,KAAK,WAAWY,UAAQ,EAACD,YAAY,yBAAyBE,UAAU,IAAIC,UAAU,KAAKC,QAAQ,+CAA6CC,MAAM,6FAGrL,SAAC,KAAD,CAAaN,KAAK,SAAlB,SAA2B,kBAM1C,C,8VCvCKO,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2PAaTE,EAAYF,EAAAA,EAAAA,KAAH,0OAYTG,EAAcH,EAAAA,EAAAA,OAAH,yWAmBXI,EAAMJ,EAAAA,EAAAA,IAAH,iPAYHK,EAAIL,EAAAA,EAAAA,EAAH,qNAYDM,EAAQN,EAAAA,EAAAA,GAAH,iIAOLO,EAAKP,EAAAA,EAAAA,GAAH,+HAOFQ,EAAYR,EAAAA,EAAAA,IAAH,mGAkCTS,EAAQT,EAAAA,EAAAA,MAAH,gMAaLU,EAAOV,EAAAA,EAAAA,KAAH,kJAUJW,EAAQX,EAAAA,EAAAA,IAAH,iH","sources":["views/RegisterView.js","views/views.styled.js"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { authOperations } from \"redux/auth\";\nimport { FormViews, ButtonViews, Title, Container, Input } from \"./views.styled\";\n// import { RegistrationSchema } from \"components/Schemas/schemas\";\n\n// const onSubmit = async (values, actions) => {\n//     // console.log(values);\n//     // console.log(actions);\n//     await new Promise((resolve) => setTimeout(resolve, 1000));\n//     actions.resetForm();\n// };\nconst RegisterView = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const name = e.currentTarget.elements.userName.value;\n        const email = e.currentTarget.elements.userEmail.value;\n        const password = e.currentTarget.elements.password.value;\n\n        const formData = {\n            name,\n            email,\n            password,\n        };\n        dispatch(authOperations.register(formData));\n        // console.log(name, email, password);\n    }\n    return (\n\n        <Container>\n            <Title>Registration</Title>\n            <FormViews onSubmit={handleSubmit} autoComplete=\"off\">\n                <label>\n                    <span>\n                        <Input type=\"text\" name=\"userName\" placeholder=\"Enter your name...\" required></Input>\n                    </span>\n                </label>\n                <label>\n                    <span>\n                        <Input type=\"email\" name=\"userEmail\" placeholder=\"Enter your email...\" required />\n                    </span>\n                </label>\n                <label>\n                    <span>\n                        <Input type=\"password\" name=\"password\" required placeholder=\"Enter your password...\" minlength=\"6\" maxlength=\"12\" pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\" title=\"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\" />\n                    </span>\n                </label>\n                <ButtonViews type=\"submit\">Register</ButtonViews>\n            </FormViews>\n\n\n        </Container >\n    )\n}\nexport default RegisterView;\n\n\n// const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const name = e.currentTarget.elements.userName.value;\n//     const email = e.currentTarget.elements.userEmail.value;\n//     const password = e.currentTarget.elements.userPassword.value;\n\n//     const formData = {\n//         name,\n//         email,\n//         password,\n//     };\n//     dispatch(authOperations.register(formData));\n//     console.log(name, email, password);\n// }\n/* <Title>Registration</Title>\n\n\n{/* <FormViews\n    initialValues={{\n        username: '',\n        email: '',\n        password: '',\n    }}\n    validationSchema={RegistrationSchema}\n    onSubmit={(values, { resetForm }) => {\n        dispatch(authOperations.register(values));\n        resetForm();\n        console.log(values);\n    }\n    }\n//  {resetForm}) => {\n//     // dispatch(authOperations.register(values));\n//     resetForm()\n// }}\n>\n    {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n        <FormField onSubmit={handleSubmit}>\n            <Input\n                name=\"username\"\n                type=\"text\"\n                onChange={handleChange}\n                value={values.username}\n                onBlur={handleBlur}\n                placeholder=\"Enter your name...\"\n                className={errors.username && touched.username ? \"input-error\" : \"\"}\n            />\n            {touched.username && errors.username && <Error>{errors.username}</Error>}\n\n            <Input\n                name=\"email\"\n                type=\"email\"\n                onChange={handleChange}\n                value={values.email}\n                onBlur={handleBlur}\n                placeholder=\"Enter your email...\"\n                className={errors.email && touched.email ? \"input-error\" : \"\"}\n            />\n            {touched.email && errors.email && <Error>{errors.email}</Error>}\n\n            <Input\n                name=\"password\"\n                type=\"password\"\n                onChange={handleChange}\n                value={values.password}\n                onBlur={handleBlur}\n                placeholder=\"Enter your password...\"\n                className={errors.password && touched.password ? \"input-error\" : \"\"}\n            />\n            {touched.password && errors.password && <Error>{errors.password}</Error>}\n\n            <ButtonViews type=\"submit\">Register</ButtonViews>\n        </FormField>\n    )}\n</FormViews> */","import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\n\n// const FormViews = styled(Formik)`\n// text-align: center;\n// max-width:250px;\n// border: 1px solid black;\n// padding:20px;\n// border-radius: 10px;\n// display:flex;\n// flex-direction:column;\n// gap:10px;\n// background-color: rgba(0, 0, 0, 0.3);\n// `\nconst FormField = styled(Form)`\ntext-align: center;\n width: 95%;\n  max-width: 400px;\n  margin: 0 auto;\nborder: 1px solid black;\npadding:20px;\nborder-radius: 10px;\ndisplay:flex;\nflex-direction:column;\ngap:10px;\nbackground-color: rgba(0, 0, 0, 0.3);\n`\nconst FormViews = styled.form`\ntext-align: center;\nmax-width:250px;\nborder: 1px solid black;\nmargin-left:20px;\npadding:20px;\nborder-radius: 10px;\ndisplay:flex;\nflex-direction:column;\ngap:20px;\nbackground-color: rgba(0, 0, 0, 0.3);\n`\nconst ButtonViews = styled.button`\n  background-color: #333333;\n  margin: 10px;\n  padding: 10px 25px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: #F5FFFA;\n  box-shadow: 0 0 20px #eee;\n  border-radius: 10px;\n  display: block;\n\n  &:hover {\n    background-color:#e9d362;\n    color: #333333;\n    text-decoration: none;\n  }\n`;\n\nconst Div = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-top: 20px;\nalign-items: center;\n/* text-align: center; */\ncolor: #F5FFFA;\nmargin-left: auto;\nmargin-right: auto;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n\n  `\nconst P = styled.p`\nbackground-color: rgba(0, 0, 0, 0.3);\nfont-weight: 500;\nmax-width: 200px; \nborder-radius: 10px;\npadding: 5px;\ntext-align: center;\nborder:1px solid black;\n&:hover{\ncolor: #e9d362;\n}`\n\nconst Title = styled.h1`\nfont-weight: 500;\nmargin: 15px 0px;\ncolor: #F5FFFA;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n\n  `\nconst H2 = styled.h2`\nfont-weight: 400;\nmargin: 10px 0;\ncolor: #F5FFFA;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\n\n  `\nconst Container = styled.div`\n\n    display: flex;\nalign-items: center;\nflex-direction: column;\n    \n`\n// const Input = styled(Field)`\n//  /* font-size: 10px;\n// width:200px;\n// height:20px;\n// border-radius: 5px;\n// border: none;\n// outline:none; */\n// width: 100%;\n//   padding: 0.65rem 0.5rem;\n//   font-size: 1rem;\n//   color: #2d3748;\n//   border: 2px solid #4a5568;\n//   /* background-color: #2d3748; */\n//   border-radius: 10px;\n//   outline: none;\n// &:focus {\n//   /* background-color: #e9d362;\n//     color: #333333; */\n//     border-color: #4299e1;\n//   };\n//   &::grammar-error{\n//      border-color: #fc8181;\n//   }\n//   &::placeholder {\n//     color: #a0aec0;\n//   }\n//  `\nconst Input = styled.input`\n font-size: 10px;\nwidth:200px;\nheight:20px;\nborder-radius: 5px;\nborder: none;\noutline:none;\n\n&:hover {\n  background-color: #e9d362;\n    color: #333333;\n  }\n `\nconst Span = styled.span`\n margin-top: 15px;\n font-weight: 500;\n \n &:hover{\n\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\ncolor: #e9d362;\n}`\n\nconst Error = styled.div`\n  color: #fc8181;\n  font-size: 0.75rem;\n  text-align: left;\n  margin-top: 0.25rem;\n\n `\n\nexport { Container, Title, Div, ButtonViews, FormViews, Input, H2, P, Span, Error, FormField }\n"],"names":["dispatch","useDispatch","onSubmit","e","preventDefault","formData","name","currentTarget","elements","userName","value","email","userEmail","password","authOperations","autoComplete","type","placeholder","required","minlength","maxlength","pattern","title","FormField","styled","Form","FormViews","ButtonViews","Div","P","Title","H2","Container","Input","Span","Error"],"sourceRoot":""}