{"version":3,"file":"static/js/23.0701eb7e.chunk.js","mappings":"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","sources":["components/App/App.styled.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactListItem.styled.js","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","redux/contacts/selectors.js","views/ContactView.js"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Div = styled.div`\n    width: 500px;\n    margin: 20px auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n  `\n","import styled from '@emotion/styled';\n\nexport const Button = styled.button`\n  padding: 10px;\n  width:100px;\n  background-color: #a8edea;\n  font-size: 10px;\n  border-radius: 5px;\n  border: none;\n   font-weight: bold;\n  &:hover {\n    background-color:#051efc;\n    color: white;\n  }\n`\nexport const Label = styled.label`\nfont-weight: bold;\nfont-size: 20px;\ndisplay:flex;\nflex-direction:column;\n`\nexport const Form = styled.form`\nmax-width:400px;\nborder: 2px solid black;\nmargin-left:20px;\npadding:20px;\nborder-radius: 10px;\ndisplay:flex;\nflex-direction:column;\ngap:20px;\n`\nexport const Input = styled.input`\nfont-size: 10px;\nwidth:250px;\nheight:20px;\nbackground-color: #d3eaed;\nborder-radius: 5px;\noutline:none;`","import { Button, Input, Label, Form} from \"./ContactForm.styled\";\nimport {  useState } from \"react\";\nimport { nanoid } from 'nanoid'\nimport PropTypes from 'prop-types';\n\n\n\nexport const ContactForm = (props) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  \n \n  const handleChangeForm = event => {\n        const {name, value} = event.target\n  switch (name) {\n    case 'name':\n      setName(value);\n      break;\n    case 'phone':\n      setNumber(value);\n      break;\n    default:\n      return;\n  }\n  }\n  const id = nanoid();\n  \n  const handelSubmit = (e) => {\n  e.preventDefault();\n  const { onAdd } = props;\n   const isValidatedForm = validateForm();\n\n  if (isValidatedForm) {\n    onAdd({ id, name, number });\n    resetForm();\n  }\n};\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n} \n\nconst validateForm = () => {\n  const { onCheckUnique } = props;\n  if (!name || !number) {\n    alert('Some field is empty');\n    return false;\n  }\n  return onCheckUnique(name);\n};\n\n  return (\n    <Form onSubmit={handelSubmit}>\n      <Label htmlFor={id}>\n        Name:<Input\n          type=\"text\"\n          name='name'\n          value={name}\n          placeholder=\"Enter contact name\"\n          onChange={handleChangeForm}\n          id={id}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required  />\n      </Label>\n      <Label htmlFor=\"\"> Number:\n        <Input\n          type=\"tel\"\n          name='phone'\n          value={number}\n          placeholder=\"Enter contact number\"\n          onChange={handleChangeForm}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required  \n        /></Label>\n      <Button type='submit'>Add contact</Button>\n    </Form>\n  );\n\n}\n\nContactForm.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n  onCheckUnique: PropTypes.func.isRequired,\n};\n\n\n\n\n\n","import styled from '@emotion/styled';\n\nexport const Ul = styled.ul`\ndisplay:flex;\nflex-direction:column;\n`","import styled from '@emotion/styled';\n\nexport const Li = styled.li`\nmax-width:400px;\ndisplay:flex;\njustify-content: center;\nmargin-bottom: 20px;\nalign-items: center;\n  gap: 10px;`\n\nexport const Button = styled.button`\n  width:70px;\n padding: 10px;\n   background-color: #a8edea;\n  font-size: 10px;\n  border-radius: 5px;\n  border: none;\n   font-weight: bold;\n  &:hover {\n    background-color:#051efc;\n    color: white;\n  }`\n\nexport const Span = styled.span`\n  font-weight: 400;\n  font-size: 15px;\n`","import { Li, Span,Button } from './ContactListItem.styled';\nimport PropTypes from 'prop-types';\n\nexport const ContactListItem = ({ id, name, number, delContact }) => {\n        return (\n        <Li>\n           <Span>{name}</Span> : <Span>{number}</Span>\n            <Button type=\"button\" onClick={()=> delContact(id)}>Delete</Button>\n        </Li>\n    )\n}\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  \n}","import PropTypes from 'prop-types';\nimport { Ul } from './ContactList.styled';\nimport {ContactListItem} from \"./ContactListItem\";\n\nexport const ContactList = ({ items, delContact }) => {\n    if(items.length===0) return null\n    return (\n        <Ul>\n            {items.map(item => {\n                const { id } = item\n                return (\n                    < ContactListItem\n                        key={id}\n                    {...item}\n                delContact={delContact} />)    \n            })}\n            \n            \n         </Ul>)\n    }\n    \n\n    ContactList.propTypes = {\n    items: PropTypes.array.isRequired,\n    delContact: PropTypes.func.isRequired,\n }\n/*  {items.length === 0 ? (\n      <p>No contacts to display.</p>\n    ) : (\n      items.map(({ id, name, number }) => (\n          <ContactListItem key={id} name={name} number={number} delContact={delContact} />\n      ))\n    )} */","import styled from '@emotion/styled';\n\nexport const Input = styled.input`\n\nwidth:250px;\nheight:20px;\nbackground-color: #d3eaed;\nborder-radius: 5px;\noutline:none;`\n\nexport const Label = styled.label`\npadding: 20px;\nfont-weight: bold;\ndisplay:flex;\nflex-direction:column;\ngap:10px;\nalign-items:flex-start;\njustify-content: flex-start;\n`","import { Input, Label } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\n\nexport  const Filter = ({filter, onChange}) => {\n        return (\n            <>\n                <Label>find contact by name\n                <Input type=\"text\" \n                name='filter'\n                value={filter}\n                onChange={({target})  => onChange(target.value)}\n                placeholder=\"Enter name for Search\"\n                    /></Label>\n            </>\n        )\n    }\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n }","// import { setFilter } from \"./createSlice\";\n// import { createSelector } from \"@reduxjs/toolkit\";\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\n// export const selectVisibleContacts = createSelector(\n//     [selectFilter, selectContacts],\n//     (filter, items) => {\n//         return items.filter((item) =>\n//             item.name.toLowerCase().includes(filter.toLowerCase())\n//         );\n//     }\n// );\n\n\n\n","import { useEffect } from 'react';\nimport { Div } from '../components/App/App.styled';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchContacts, addContact, deleteContact } from 'redux/contacts/operations';\nimport { selectFilter, selectContacts, selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { setFilter } from 'redux/contacts/createSlice';\n\nconst ContactView = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts)\n    const filter = useSelector(selectFilter);\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n    const handleAddContact = (data) => {\n        dispatch(addContact(data));\n    };\n\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    const handelCheckUniqueContact = (name) => {\n        const isNameContact = !!contacts.find((item) => item.name === name)\n        isNameContact && alert(`${name} is already in items`)\n        return !isNameContact\n    }\n\n    function getVisibleContact() {\n        return contacts.filter(item =>\n            item.name.toLowerCase().includes((filter && filter.toLowerCase()) || \"\")\n        );\n    }\n    const handleDelContact = (id) => {\n        dispatch(deleteContact(id));\n    };\n\n    const handleFilterChange = (e) => {\n        dispatch(setFilter(e));\n    };\n    return (\n        <Div>\n            <h1>Phonebook</h1>\n            <ContactForm onAdd={handleAddContact} onCheckUnique={handelCheckUniqueContact} />\n            <h2>Contacts</h2>\n            <Filter filter={filter} onChange={handleFilterChange} />\n            {isLoading && !error && <b>Request in progress...</b>}\n            <ContactList items={getVisibleContact()} delContact={handleDelContact} />\n        </Div>\n    )\n}\nexport default ContactView;\n\n"],"names":["Div","styled","Button","Label","Form","Input","ContactForm","props","useState","name","setName","number","setNumber","handleChangeForm","event","target","value","id","nanoid","resetForm","validateForm","onCheckUnique","alert","onSubmit","e","preventDefault","onAdd","htmlFor","type","placeholder","onChange","pattern","title","required","Ul","Li","Span","ContactListItem","delContact","onClick","ContactList","items","length","map","item","Filter","filter","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectFilter","dispatch","useDispatch","useSelector","useEffect","fetchContacts","data","addContact","isNameContact","find","setFilter","toLowerCase","includes","deleteContact"],"sourceRoot":""}