{"version":3,"file":"static/js/392.c654e804.chunk.js","mappings":"2QAgBMA,IAbYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,2PAaGA,EAAAA,EAAAA,KAAH,2OAcTE,EAASF,EAAAA,EAAAA,OAAH,yWAmDNG,GAhCMH,EAAAA,EAAAA,IAAH,iPAYCA,EAAAA,EAAAA,EAAH,qNAYIA,EAAAA,EAAAA,GAAH,+HAQMA,EAAAA,EAAAA,MAAH,iMAaEA,EAAAA,EAAAA,KAAH,kJAUIA,EAAAA,EAAAA,IAAH,iH,0HCvDX,EA7CqB,WACjB,IAAMI,GAAWC,EAAAA,EAAAA,MAajB,OACI,UAAC,KAAD,CAAWC,SAZM,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfN,EAASO,EAAAA,GAAAA,SAAwB,CAC7BC,KAAMH,EAAKI,SAASC,SAASC,MAC7BC,MAAOP,EAAKI,SAASI,UAAUF,MAC/BG,SAAUT,EAAKI,SAASM,aAAaJ,SAEzCN,EAAKW,OACR,EAGsCC,aAAa,MAAhD,WACI,4BACI,2BACI,SAAC,KAAD,CAAOC,KAAK,OAAOV,KAAK,WAAWW,YAAY,qBAAqBC,UAAQ,SAGpF,4BACI,2BACI,SAAC,KAAD,CAAOF,KAAK,QAAQV,KAAK,YAAYW,YAAY,sBAAsBC,UAAQ,SAGvF,4BACI,2BACI,SAAC,KAAD,CACIF,KAAK,WACLV,KAAK,eACLY,UAAQ,EACRD,YAAY,yBACZE,UAAU,IACVC,UAAU,KACVC,QAAQ,+CACRC,MAAM,6FAIlB,SAAC,KAAD,CAAQN,KAAK,SAAb,SAAsB,eAGjC,ECnCD,EAVqB,WAEjB,OAEI,UAAC,KAAD,YACI,SAAC,EAAAO,GAAD,UAAI,kBACJ,SAAC,EAAD,MAGX,C,4OCRKC,EAAM9B,EAAAA,EAAAA,IAAH,sNAWH+B,EAAI/B,EAAAA,EAAAA,EAAH,qNAYDgC,EAAQhC,EAAAA,EAAAA,GAAH,iIAOL6B,EAAK7B,EAAAA,EAAAA,GAAH,+HAOFiC,EAAYjC,EAAAA,EAAAA,IAAH,mGAOTkC,EAAOlC,EAAAA,EAAAA,KAAH,kJAUJmC,EAAQnC,EAAAA,EAAAA,IAAH,iH","sources":["components/Forms/Formik.styled.js","components/Forms/RegistrationForm.js","views/RegisterView.js","views/views.styled.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Form } from 'formik';\n\nconst FormField = styled(Form)`\ntext-align: center;\n width: 95%;\n  max-width: 400px;\n  margin: 0 auto;\nborder: 1px solid black;\npadding:20px;\nborder-radius: 10px;\ndisplay:flex;\nflex-direction:column;\ngap:10px;\nbackground-color: rgba(0, 0, 0, 0.3);\n`\nconst FormViews = styled.form`\ntext-align: center;\nmax-width:250px;\nborder: 1px solid black;\nmargin-left:20px;\npadding:20px;\nborder-radius: 10px;\ndisplay:flex;\nflex-direction:column;\ngap:20px;\nbackground-color: rgba(0, 0, 0, 0.3);\n`\n\n\nconst Button = styled.button`\n  background-color: #333333;\n  margin: 10px;\n  padding: 10px 25px;\n  text-align: center;\n  transition: 0.5s;\n  background-size: 200% auto;\n  color: #F5FFFA;\n  box-shadow: 0 0 20px #eee;\n  border-radius: 10px;\n  display: block;\n\n  &:hover {\n    background-color:#e9d362;\n    color: #333333;\n    text-decoration: none;\n  }\n`;\n\nconst Div = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-top: 20px;\nalign-items: center;\n/* text-align: center; */\ncolor: #F5FFFA;\nmargin-left: auto;\nmargin-right: auto;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n\n  `\nconst P = styled.p`\nbackground-color: rgba(0, 0, 0, 0.3);\nfont-weight: 500;\nmax-width: 200px; \nborder-radius: 10px;\npadding: 5px;\ntext-align: center;\nborder:1px solid black;\n&:hover{\ncolor: #e9d362;\n}`\n\nconst H2 = styled.h2`\nfont-weight: 400;\nmargin: 10px 0;\ncolor: #F5FFFA;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\n\n  `\n\nconst Input = styled.input`\n font-size: 10px;\nwidth:200px;\nheight:20px;\nborder-radius: 5px;\nborder: none;\noutline:none;\n\n&:hover {\n  background-color: #e9d362;\n    color: #333333;\n  }\n `\nconst Span = styled.span`\n margin-top: 15px;\n font-weight: 500;\n \n &:hover{\n\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\ncolor: #e9d362;\n}`\n\nconst Error = styled.div`\n  color: #fc8181;\n  font-size: 0.75rem;\n  text-align: left;\n  margin-top: 0.25rem;\n\n `\n\nexport { Div, Button, FormViews, Input, H2, P, Span, Error, FormField }","import { useDispatch } from \"react-redux\";\nimport { authOperations } from \"redux/auth\";\nimport { FormViews, Button, Input } from \"./Formik.styled\";\n\nconst RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        dispatch(authOperations.register({\n            name: form.elements.userName.value,\n            email: form.elements.userEmail.value,\n            password: form.elements.userPassword.value,\n        }));\n        form.reset();\n    };\n\n    return (\n        <FormViews onSubmit={handleSubmit} autoComplete=\"off\">\n            <label>\n                <span>\n                    <Input type=\"text\" name=\"userName\" placeholder=\"Enter your name...\" required />\n                </span>\n            </label>\n            <label>\n                <span>\n                    <Input type=\"email\" name=\"userEmail\" placeholder=\"Enter your email...\" required />\n                </span>\n            </label>\n            <label>\n                <span>\n                    <Input\n                        type=\"password\"\n                        name=\"userPassword\"\n                        required\n                        placeholder=\"Enter your password...\"\n                        minLength=\"6\"\n                        maxLength=\"12\"\n                        pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\s).*$\"\n                        title=\"Please include at least 1 uppercase character, 1 lowercase character, and 1 number.\"\n                    />\n                </span>\n            </label>\n            <Button type=\"submit\">Register</Button>\n        </FormViews>\n    );\n};\n\nexport default RegisterForm;\n\n\n\n// const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const name = e.currentTarget.elements.userName.value;\n//     const email = e.currentTarget.elements.userEmail.value;\n//     const password = e.currentTarget.elements.userPassword.value;\n\n//     const formData = {\n//         name,\n//         email,\n//         password,\n//     };\n//     dispatch(authOperations.register(formData));\n//     console.log(name, email, password);\n// }\n/* <Title>Registration</Title>\n\n\n{/* <FormViews\n    initialValues={{\n        username: '',\n        email: '',\n        password: '',\n    }}\n    validationSchema={RegistrationSchema}\n    onSubmit={(values, { resetForm }) => {\n        dispatch(authOperations.register(values));\n        resetForm();\n        console.log(values);\n    }\n    }\n//  {resetForm}) => {\n//     // dispatch(authOperations.register(values));\n//     resetForm()\n// }}\n>\n    {({ values, errors, touched, handleChange, handleBlur, handleSubmit }) => (\n        <FormField onSubmit={handleSubmit}>\n            <Input\n                name=\"username\"\n                type=\"text\"\n                onChange={handleChange}\n                value={values.username}\n                onBlur={handleBlur}\n                placeholder=\"Enter your name...\"\n                className={errors.username && touched.username ? \"input-error\" : \"\"}\n            />\n            {touched.username && errors.username && <Error>{errors.username}</Error>}\n\n            <Input\n                name=\"email\"\n                type=\"email\"\n                onChange={handleChange}\n                value={values.email}\n                onBlur={handleBlur}\n                placeholder=\"Enter your email...\"\n                className={errors.email && touched.email ? \"input-error\" : \"\"}\n            />\n            {touched.email && errors.email && <Error>{errors.email}</Error>}\n\n            <Input\n                name=\"password\"\n                type=\"password\"\n                onChange={handleChange}\n                value={values.password}\n                onBlur={handleBlur}\n                placeholder=\"Enter your password...\"\n                className={errors.password && touched.password ? \"input-error\" : \"\"}\n            />\n            {touched.password && errors.password && <Error>{errors.password}</Error>}\n\n            <ButtonViews type=\"submit\">Register</ButtonViews>\n        </FormField>\n    )}\n</FormViews> */","import { Container, H2 } from \"./views.styled\";\nimport RegisterForm from \"components/Forms/RegistrationForm\";\nconst RegisterView = () => {\n\n    return (\n\n        <Container>\n            <H2>Registration</H2>\n            <RegisterForm />\n        </Container >\n    )\n}\nexport default RegisterView;\n","import styled from '@emotion/styled';\n\n\nconst Div = styled.div`\ndisplay: flex;\nflex-direction: column;\nmargin-top: 20px;\nalign-items: center;\ncolor: #F5FFFA;\nmargin-left: auto;\nmargin-right: auto;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n\n  `\nconst P = styled.p`\nbackground-color: rgba(0, 0, 0, 0.3);\nfont-weight: 500;\nmax-width: 200px; \nborder-radius: 10px;\npadding: 5px;\ntext-align: center;\nborder:1px solid black;\n&:hover{\ncolor: #e9d362;\n}`\n\nconst Title = styled.h1`\nfont-weight: 900;\nmargin: 15px 0px;\ncolor: #F5FFFA;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.5);\n\n  `\nconst H2 = styled.h2`\nfont-weight: 400;\nmargin: 10px 0;\ncolor: #F5FFFA;\ntext-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\n\n  `\nconst Container = styled.div`\n\n    display: flex;\nalign-items: center;\nflex-direction: column;\n    \n`\nconst Span = styled.span`\n margin-top: 15px;\n font-weight: 500;\n \n &:hover{\n\n  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.8);\ncolor: #e9d362;\n}`\n\nconst Error = styled.div`\n  color: #fc8181;\n  font-size: 0.75rem;\n  text-align: left;\n  margin-top: 0.25rem;\n\n `\n\nexport { Container, Title, Div, H2, P, Error, Span }\n"],"names":["FormViews","styled","Form","Button","Input","dispatch","useDispatch","onSubmit","e","preventDefault","form","currentTarget","authOperations","name","elements","userName","value","email","userEmail","password","userPassword","reset","autoComplete","type","placeholder","required","minLength","maxLength","pattern","title","H2","Div","P","Title","Container","Span","Error"],"sourceRoot":""}